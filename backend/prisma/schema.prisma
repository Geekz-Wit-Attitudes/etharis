// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User
model User {
  id             String   @id @default(cuid())
  email          String   @unique
  password       String
  name           String
  email_verified Boolean  @default(false)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  role           UserRole

  // Relations
  wallet Wallet?
  token  Token[]
  review Review[]

  @@map("users")
}

// Wallet 
model Wallet {
  id               String   @id @default(cuid())
  user_id          String   @unique
  address          String   @unique
  encrypted_priv_key String
  created_at       DateTime @default(now())

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("wallets")
}

// Token
model Token {
  id        String    @id @default(cuid())
  user_id   String
  token     String    @unique
  expires_at DateTime
  created_at DateTime @default(now())
  type      TokenType @default(REFRESH)

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("tokens")
}

// Review 
model Review {
  id               Int      @id @default(autoincrement())
  contract_address String
  reviewer_id      String
  rating           Int
  comment          String?
  created_at       DateTime @default(now())

  // Relations
  reviewer User @relation(fields: [reviewer_id], references: [id], onDelete: Cascade)

  @@unique([contract_address, reviewer_id], name: "one_review_per_user_per_contract")

  @@map("verification_logs")
}

enum TokenType {
  ACCESS
  REFRESH
  EMAIL_VERIFICATION
  PASSWORD_RESET
}

enum UserRole {
  BRAND
  CREATOR
}
